from dotenv import load_dotenv
import os
import pydantic

load_dotenv()

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
LANGCHAIN_TRACING_V2 = os.getenv("LANGCHAIN_TRACING_V2")
LANGCHAIN_ENDPOINT = os.getenv("LANGCHAIN_ENDPOINT")
LANGCHAIN_API_KEY = os.getenv("LANGCHAIN_API_KEY")
LANGCHAIN_PROJECT = os.getenv("LANGCHAIN_PROJECT")
ASTRA_API_ENDPOINT = os.getenv("ASTRA_API_ENDPOINT")
ASTRA_COLLECTION_NAME = os.getenv("ASTRA_COLLECTION_NAME")
ASTRA_NAMESPACE = os.getenv("ASTRA_NAMESPACE")
ASTRA_ACCESS_TOKEN = os.getenv("ASTRA_ACCESS_TOKEN")
DEVELOPMENT_ENV = os.getenv("DEVELOPMENT_ENV")

env = {
    "OPENAI_API_KEY": OPENAI_API_KEY,
    "LANGCHAIN_TRACING_V2": LANGCHAIN_TRACING_V2,
    "LANGCHAIN_ENDPOINT": LANGCHAIN_ENDPOINT,
    "LANGCHAIN_API_KEY": LANGCHAIN_API_KEY,
    "LANGCHAIN_PROJECT": LANGCHAIN_PROJECT,
    "ASTRA_API_ENDPOINT": ASTRA_API_ENDPOINT,
    "ASTRA_COLLECTION_NAME": ASTRA_COLLECTION_NAME,
    "ASTRA_NAMESPACE": ASTRA_NAMESPACE,
    "ASTRA_ACCESS_TOKEN": ASTRA_ACCESS_TOKEN,
    "DEVELOPMENT_ENV": DEVELOPMENT_ENV,
}

class Config(pydantic.BaseModel):
    OPENAI_API_KEY: str
    LANGCHAIN_TRACING_V2: str
    LANGCHAIN_ENDPOINT: str
    LANGCHAIN_API_KEY: str
    LANGCHAIN_PROJECT: str
    ASTRA_API_ENDPOINT: str
    ASTRA_COLLECTION_NAME: str
    ASTRA_NAMESPACE: str
    ASTRA_ACCESS_TOKEN: str
    DEVELOPMENT_ENV: str

env_config = Config(**env)